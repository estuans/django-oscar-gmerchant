{"name":"Django-oscar-gmerchant","tagline":"Integration with Google Merchant Center and Django Oscar","body":"#django-oscar-gmerchant\r\n\r\nIntegration with Google Merchant Center and Django Oscar using the v2 Shopping API\r\n\r\nTHIS IS STILL AS WORK IN PROGRESS. HEREBEDRAGONS. COUNT YOURSELF WARNED.\r\n\r\nIt *should* however be fairly straight forward to use.\r\nSimply add to your post-oscar applications list and you should be on your way.\r\n\r\nIf you receive warnings about the ProductAdminClass, then you should look at changing\r\nthe ProductAdmin that is being modified inside of gmerchant/admin to point directly at\r\nyour-likely-to-have-been modified class.\r\n\r\n\r\n##Usage\r\n\r\n1. Install.\r\n2. Run import_google_categories.\r\n3. Add a Google Merchant account to your admin.\r\n4. Add Google Merchant Records to the products you wish publish.\r\n5. Run upload_catalogue using a cronjob.\r\n6. Profit (optional!)\r\n\r\n## Ideas / To Do's\r\n\r\n* Add post-save signals to Product model save to trigger updates to single product records.\r\n* Complete integration with \"Store Inventory Managment\".\r\n* Add Oscar Dashboard integration.\r\n* Improve Merchant account handling.\r\n* **Add Tests**\r\n* Write some real documentation.\r\n* Package it up for PyPi.\r\n\r\nContributions welcome.\r\n\r\n## Support\r\n\r\nIf you are having trouble using this module, don't hesitate to add an issue or send me an [email](mailto:ben@n0ware.co.uk)\r\n\r\n\r\n## Acknowledgments\r\n\r\nThis project borrows heavily from the sample code supplied by [Google](https://github.com/googleads/googleads-shopping-samples/tree/master/python)\r\n","google":"UA-58437072-1","note":"Don't delete this file! It's used internally to help with page regeneration."}
